//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace АСК_ЭПБ
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CONTRACTOR> CONTRACTOR { get; set; }
        public virtual DbSet<DOCUMENTATION> DOCUMENTATION { get; set; }
        public virtual DbSet<EQUIPMENT> EQUIPMENT { get; set; }
        public virtual DbSet<EQUIPMENT_ACTIVITY> EQUIPMENT_ACTIVITY { get; set; }
        public virtual DbSet<EQUIPMENT_STATE> EQUIPMENT_STATE { get; set; }
        public virtual DbSet<REGISTRATION_REQUST> REGISTRATION_REQUST { get; set; }
        public virtual DbSet<REQUEST_STATUS> REQUEST_STATUS { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<UserRoles> UserRoles { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<WORK_REQUEST> WORK_REQUEST { get; set; }
        public virtual DbSet<WORK_TYPE> WORK_TYPE { get; set; }
    
        [DbFunction("Entities", "GetEquipment")]
        public virtual IQueryable<GetEquipment_Result> GetEquipment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetEquipment_Result>("[Entities].[GetEquipment]()");
        }
    
        [DbFunction("Entities", "GetUserInfo")]
        public virtual IQueryable<GetUserInfo_Result> GetUserInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetUserInfo_Result>("[Entities].[GetUserInfo]()");
        }
    
        [DbFunction("Entities", "GetWorkRequests")]
        public virtual IQueryable<GetWorkRequests_Result> GetWorkRequests()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetWorkRequests_Result>("[Entities].[GetWorkRequests]()");
        }
    }
}
